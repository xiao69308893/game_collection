// ================================
// 动画效果 - Animations
// ================================

// 基础动画变量
:root {
  --animation-duration-fast: 0.15s;
  --animation-duration-normal: 0.3s;
  --animation-duration-slow: 0.5s;
  --animation-timing-ease: ease;
  --animation-timing-ease-in: ease-in;
  --animation-timing-ease-out: ease-out;
  --animation-timing-ease-in-out: ease-in-out;
  --animation-timing-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

// 淡入淡出动画
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

// 缩放动画
@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
  }
  to {
    transform: scale(1);
  }
}

@keyframes zoomOut {
  from {
    transform: scale(1);
  }
  50% {
    opacity: 1;
  }
  to {
    opacity: 0;
    transform: scale(0.3);
  }
}

@keyframes zoomInUp {
  from {
    opacity: 0;
    transform: scale(0.1) translateY(2000px);
  }
  60% {
    opacity: 1;
    transform: scale(0.475) translateY(-60px);
  }
  to {
    transform: scale(1) translateY(0);
  }
}

// 滑动动画
@keyframes slideInUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

// 弹跳动画
@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translateY(0);
  }
  40%, 43% {
    transform: translateY(-30px);
  }
  70% {
    transform: translateY(-15px);
  }
  90% {
    transform: translateY(-4px);
  }
}

@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
  }
}

// 旋转动画
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes rotateIn {
  from {
    opacity: 0;
    transform: rotate(-200deg);
  }
  to {
    opacity: 1;
    transform: rotate(0deg);
  }
}

// 摇摆动画
@keyframes swing {
  20% {
    transform: rotate(15deg);
  }
  40% {
    transform: rotate(-10deg);
  }
  60% {
    transform: rotate(5deg);
  }
  80% {
    transform: rotate(-5deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

@keyframes wobble {
  0% {
    transform: translateX(0%);
  }
  15% {
    transform: translateX(-25%) rotate(-5deg);
  }
  30% {
    transform: translateX(20%) rotate(3deg);
  }
  45% {
    transform: translateX(-15%) rotate(-3deg);
  }
  60% {
    transform: translateX(10%) rotate(2deg);
  }
  75% {
    transform: translateX(-5%) rotate(-1deg);
  }
  100% {
    transform: translateX(0%);
  }
}

// 脉冲动画
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes heartBeat {
  0% {
    transform: scale(1);
  }
  14% {
    transform: scale(1.3);
  }
  28% {
    transform: scale(1);
  }
  42% {
    transform: scale(1.3);
  }
  70% {
    transform: scale(1);
  }
}

// 闪烁动画
@keyframes flash {
  0%, 50%, 100% {
    opacity: 1;
  }
  25%, 75% {
    opacity: 0;
  }
}

@keyframes blink {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

// 抖动动画
@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-10px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(10px);
  }
}

@keyframes jello {
  0%, 11.1%, 100% {
    transform: translateX(0);
  }
  22.2% {
    transform: skewX(-12.5deg) skewY(-12.5deg);
  }
  33.3% {
    transform: skewX(6.25deg) skewY(6.25deg);
  }
  44.4% {
    transform: skewX(-3.125deg) skewY(-3.125deg);
  }
  55.5% {
    transform: skewX(1.5625deg) skewY(1.5625deg);
  }
  66.6% {
    transform: skewX(-0.78125deg) skewY(-0.78125deg);
  }
  77.7% {
    transform: skewX(0.390625deg) skewY(0.390625deg);
  }
  88.8% {
    transform: skewX(-0.1953125deg) skewY(-0.1953125deg);
  }
}

// 游戏特定动画
@keyframes gameStart {
  0% {
    opacity: 0;
    transform: scale(0.8) rotateY(-180deg);
  }
  50% {
    opacity: 1;
    transform: scale(1.1) rotateY(-90deg);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotateY(0deg);
  }
}

@keyframes scoreCount {
  0% {
    transform: scale(1);
    color: var(--text-primary);
  }
  50% {
    transform: scale(1.2);
    color: var(--color-primary);
  }
  100% {
    transform: scale(1);
    color: var(--text-primary);
  }
}

@keyframes levelUp {
  0% {
    transform: scale(1);
    filter: hue-rotate(0deg);
  }
  25% {
    transform: scale(1.1);
    filter: hue-rotate(90deg);
  }
  50% {
    transform: scale(1.2);
    filter: hue-rotate(180deg);
  }
  75% {
    transform: scale(1.1);
    filter: hue-rotate(270deg);
  }
  100% {
    transform: scale(1);
    filter: hue-rotate(360deg);
  }
}

@keyframes gameOver {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  25% {
    opacity: 0.8;
    transform: scale(0.95) rotate(-1deg);
  }
  50% {
    opacity: 0.6;
    transform: scale(0.9) rotate(1deg);
  }
  75% {
    opacity: 0.4;
    transform: scale(0.85) rotate(-0.5deg);
  }
  100% {
    opacity: 0.2;
    transform: scale(0.8) rotate(0deg);
  }
}

@keyframes particleFloat {
  0% {
    transform: translateY(0) rotate(0deg);
    opacity: 1;
  }
  50% {
    transform: translateY(-20px) rotate(180deg);
    opacity: 0.8;
  }
  100% {
    transform: translateY(-40px) rotate(360deg);
    opacity: 0;
  }
}

@keyframes blockDrop {
  0% {
    transform: translateY(-100px) rotate(0deg);
    opacity: 0;
  }
  50% {
    opacity: 0.8;
  }
  100% {
    transform: translateY(0) rotate(360deg);
    opacity: 1;
  }
}

// 动画类
.animate-fadeIn {
  animation: fadeIn var(--animation-duration-normal) var(--animation-timing-ease);
}

.animate-fadeOut {
  animation: fadeOut var(--animation-duration-normal) var(--animation-timing-ease);
}

.animate-fadeInUp {
  animation: fadeInUp var(--animation-duration-normal) var(--animation-timing-ease);
}

.animate-fadeInDown {
  animation: fadeInDown var(--animation-duration-normal) var(--animation-timing-ease);
}

.animate-fadeInLeft {
  animation: fadeInLeft var(--animation-duration-normal) var(--animation-timing-ease);
}

.animate-fadeInRight {
  animation: fadeInRight var(--animation-duration-normal) var(--animation-timing-ease);
}

.animate-zoomIn {
  animation: zoomIn var(--animation-duration-normal) var(--animation-timing-ease);
}

.animate-zoomOut {
  animation: zoomOut var(--animation-duration-normal) var(--animation-timing-ease);
}

.animate-slideInUp {
  animation: slideInUp var(--animation-duration-normal) var(--animation-timing-ease);
}

.animate-slideInDown {
  animation: slideInDown var(--animation-duration-normal) var(--animation-timing-ease);
}

.animate-slideInLeft {
  animation: slideInLeft var(--animation-duration-normal) var(--animation-timing-ease);
}

.animate-slideInRight {
  animation: slideInRight var(--animation-duration-normal) var(--animation-timing-ease);
}

.animate-bounce {
  animation: bounce var(--animation-duration-slow) var(--animation-timing-ease) infinite;
}

.animate-bounceIn {
  animation: bounceIn var(--animation-duration-slow) var(--animation-timing-bounce);
}

.animate-rotate {
  animation: rotate 2s linear infinite;
}

.animate-rotateIn {
  animation: rotateIn var(--animation-duration-slow) var(--animation-timing-ease);
}

.animate-swing {
  animation: swing 1s var(--animation-timing-ease);
}

.animate-wobble {
  animation: wobble 1s var(--animation-timing-ease);
}

.animate-pulse {
  animation: pulse 2s var(--animation-timing-ease) infinite;
}

.animate-heartBeat {
  animation: heartBeat 1.3s var(--animation-timing-ease) infinite;
}

.animate-flash {
  animation: flash 2s var(--animation-timing-ease) infinite;
}

.animate-blink {
  animation: blink 1s var(--animation-timing-ease) infinite;
}

.animate-shake {
  animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97);
}

.animate-jello {
  animation: jello 0.9s var(--animation-timing-ease);
}

// 游戏动画类
.animate-gameStart {
  animation: gameStart 1s var(--animation-timing-bounce);
}

.animate-scoreCount {
  animation: scoreCount 0.5s var(--animation-timing-ease);
}

.animate-levelUp {
  animation: levelUp 1s var(--animation-timing-ease);
}

.animate-gameOver {
  animation: gameOver 2s var(--animation-timing-ease) forwards;
}

.animate-particleFloat {
  animation: particleFloat 3s var(--animation-timing-ease) infinite;
}

.animate-blockDrop {
  animation: blockDrop 0.6s var(--animation-timing-bounce);
}

// 延迟动画类
.animate-delay-1 {
  animation-delay: 0.1s;
}

.animate-delay-2 {
  animation-delay: 0.2s;
}

.animate-delay-3 {
  animation-delay: 0.3s;
}

.animate-delay-4 {
  animation-delay: 0.4s;
}

.animate-delay-5 {
  animation-delay: 0.5s;
}

// 动画持续时间修饰符
.animate-fast {
  animation-duration: var(--animation-duration-fast) !important;
}

.animate-slow {
  animation-duration: var(--animation-duration-slow) !important;
}

.animate-slower {
  animation-duration: 1s !important;
}

.animate-slowest {
  animation-duration: 2s !important;
}

// 无限循环动画
.animate-infinite {
  animation-iteration-count: infinite;
}

// 动画填充模式
.animate-fill-both {
  animation-fill-mode: both;
}

.animate-fill-forwards {
  animation-fill-mode: forwards;
}

.animate-fill-backwards {
  animation-fill-mode: backwards;
}

// 动画播放状态
.animate-paused {
  animation-play-state: paused;
}

.animate-running {
  animation-play-state: running;
}

// 响应式动画 - 在小屏幕上减少动画
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

// 悬停动画效果
.hover-lift {
  transition: transform var(--animation-duration-normal) var(--animation-timing-ease);

  &:hover {
    transform: translateY(-4px);
  }
}

.hover-grow {
  transition: transform var(--animation-duration-normal) var(--animation-timing-ease);

  &:hover {
    transform: scale(1.05);
  }
}

.hover-shrink {
  transition: transform var(--animation-duration-normal) var(--animation-timing-ease);

  &:hover {
    transform: scale(0.95);
  }
}

.hover-rotate {
  transition: transform var(--animation-duration-normal) var(--animation-timing-ease);

  &:hover {
    transform: rotate(5deg);
  }
}

.hover-shadow {
  transition: box-shadow var(--animation-duration-normal) var(--animation-timing-ease);

  &:hover {
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }
}

// 加载动画
.loading-spinner {
  width: 40px;
  height: 40px;
  border: 4px solid var(--border-color);
  border-top: 4px solid var(--color-primary);
  border-radius: 50%;
  animation: rotate 1s linear infinite;
}

.loading-dots {
  display: inline-block;

  &::after {
    content: '';
    animation: loadingDots 1.5s steps(4) infinite;
  }
}

@keyframes loadingDots {
  0%, 20% {
    content: '';
  }
  40% {
    content: '.';
  }
  60% {
    content: '..';
  }
  80%, 100% {
    content: '...';
  }
}

// 页面转换动画
.page-enter-active,
.page-leave-active {
  transition: all var(--animation-duration-normal) var(--animation-timing-ease);
}

.page-enter-from {
  opacity: 0;
  transform: translateX(20px);
}

.page-leave-to {
  opacity: 0;
  transform: translateX(-20px);
}

// 路由转换动画
.route-fade-enter-active,
.route-fade-leave-active {
  transition: opacity var(--animation-duration-normal) var(--animation-timing-ease);
}

.route-fade-enter-from,
.route-fade-leave-to {
  opacity: 0;
}

.route-slide-enter-active,
.route-slide-leave-active {
  transition: all var(--animation-duration-normal) var(--animation-timing-ease);
}

.route-slide-enter-from {
  transform: translateX(100%);
}

.route-slide-leave-to {
  transform: translateX(-100%);
}

// 游戏特效动画
.tetris-line-clear {
  animation: flash 0.3s var(--animation-timing-ease) 3;
}

.snake-eat-effect {
  animation: pulse 0.3s var(--animation-timing-ease);
}

.game-button-press {
  animation: bounceIn 0.3s var(--animation-timing-bounce);
}

.score-popup {
  animation: zoomInUp 0.5s var(--animation-timing-bounce);
}

// 主题切换动画
.theme-transition {
  transition: background-color var(--animation-duration-normal) var(--animation-timing-ease),
  color var(--animation-duration-normal) var(--animation-timing-ease),
  border-color var(--animation-duration-normal) var(--animation-timing-ease);
}

// 工具函数 - 创建自定义动画
@mixin custom-animation($name, $duration: var(--animation-duration-normal), $timing: var(--animation-timing-ease), $iteration: 1, $direction: normal, $fill-mode: none) {
  animation: $name $duration $timing $iteration $direction $fill-mode;
}

// 混合动画效果
.entrance-animation {
  @include custom-animation(fadeInUp, 0.6s, var(--animation-timing-ease));
}

.exit-animation {
  @include custom-animation(fadeOut, 0.3s, var(--animation-timing-ease));
}

.attention-seeker {
  @include custom-animation(bounce, 1s, var(--animation-timing-ease));
}

// 3D 动画效果
.flip-card {
  perspective: 1000px;

  .flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.6s;
    transform-style: preserve-3d;
  }

  &:hover .flip-card-inner {
    transform: rotateY(180deg);
  }

  .flip-card-front,
  .flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
  }

  .flip-card-back {
    transform: rotateY(180deg);
  }
}

// 粒子效果动画
@keyframes particle1 {
  0% {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
  100% {
    transform: translate(100px, -100px) scale(0);
    opacity: 0;
  }
}

@keyframes particle2 {
  0% {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
  100% {
    transform: translate(-80px, -120px) scale(0);
    opacity: 0;
  }
}

@keyframes particle3 {
  0% {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
  100% {
    transform: translate(60px, -80px) scale(0);
    opacity: 0;
  }
}

.particle-effect {
  position: relative;

  &::before,
  &::after {
    content: '';
    position: absolute;
    width: 4px;
    height: 4px;
    background: var(--color-primary);
    border-radius: 50%;
    pointer-events: none;
  }

  &::before {
    animation: particle1 1s ease-out;
  }

  &::after {
    animation: particle2 1.2s ease-out;
  }
}
